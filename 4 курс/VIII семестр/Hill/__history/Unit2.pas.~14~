unit Unit2;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls;

type
  TForm2 = class(TForm)
    Button1: TButton;
    OpenDialog1: TOpenDialog;
    Edit1: TEdit;
    Button2: TButton;
    SaveDialog1: TSaveDialog;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  tkey    = array[1 .. 2, 1 .. 2] of byte;
  tcolumn = array[1 .. 2] of byte;

const
  k_2: Tkey = ((4, 8), (15, 16));
var
  Form2: TForm2;
  fi, fo: File;
  k_2_inv: Tkey;

implementation

{$R *.dfm}

(* Вычисление числа, обратного A по модулю N *)
function inverse(a, n: integer): integer;
var i,r: integer;
begin
  while r<>1 do
  begin
    i:=i+1;
    r:=(i*a) mod n;
  end;
  inverse:=i;
end;

function positive(X: integer): integer; 
  begin
    repeat 
      inc(X, 255);
    until X >= 0; 
    positive := X; 
  end;

procedure CalculateInvKey();
var det, i, j, count: integer;
begin
  det := k_2[1,1]*k_2[2,2]-k_2[1,2]*k_2[2, 1];
  if det < 0 then det := positive(det);

  det := inverse(det, 255);
  for i := 1 to 2 do
    for j := 1 to 2 do begin

      if i = j then
        k_2_inv[i, j] := det * k_2[3 - i, 3 - j]
      else
        k_2_inv[i, j] := - det * k_2[i, j];

      if k_2_inv[i, j] < 0 then
        k_2_inv[i, j] := positive(k_2_inv[i, j])
      else k_2_inv[i, j] := k_2_inv[i, j] mod 26;
    end;
end;

// open file
procedure TForm2.Button1Click(Sender: TObject);
begin
  if OpenDialog1.Execute then
  begin
    Edit1.Text := OpenDialog1.FileName;
    AssignFile(fi, OpenDialog1.FileName);
    Reset(fi, 1);
    Memo1.Lines.Add('Открыт файл '+OpenDialog1.FileName);
  end;
end;

procedure Hill2_Enc(var buf:tcolumn);
var newbuf: tcolumn;
begin
  Form2.Memo1.Lines.Add('Прочитан блок: '+IntToStr(buf[1])+','+IntToStr(buf[2]));
  newbuf[1] := buf[1]*k_2[1][1] + buf[2]*k_2[1][2];
  newbuf[2] := buf[1]*k_2[2][1] + buf[2]*k_2[2][2];
  buf := newbuf;
  Form2.Memo1.Lines.Add('Блок зашифрован: '+IntToStr(buf[1])+','+IntToStr(buf[2]));
end;

procedure TForm2.Button2Click(Sender: TObject);
var
  buf: tcolumn;
  count: integer;
begin
  if SaveDialog1.Execute then
  begin
     AssignFile(fo, SaveDialog1.FileName);
     ReWrite(fo, 1);
     while not eof(fi) do
     begin
       BlockRead(fi, buf, 2,count);
       //if (count=1) then buf[2] := -1;
       Hill2_Enc(buf);
       BlockWrite(fo, buf[1], 1);
       if (count<>1) then BlockWrite(fo, buf[2], 1);
     end;
     Memo1.Lines.Add('Сохранен файл '+SaveDialog1.FileName);
     ShowMessage('Сохранено!');
  end;
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
  CalculateInvKey();
end;

end.
